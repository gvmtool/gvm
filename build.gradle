import org.apache.tools.ant.filters.ReplaceTokens

import static org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL

plugins {
	id('groovy')
	id('com.jfrog.bintray') version '1.8.4'
}

String userHome = System.getProperty('user.home')
ext.installBinDir = "${userHome}/.sdkman/bin"
ext.installSrcDir = "${userHome}/.sdkman/src"

def loadConfiguration() {
	def environment = hasProperty('env') ? env : 'local'
	ext.environment = environment
	println("Environment is set to: ${environment}")

	def configFile = file('config.groovy')
	def config = new ConfigSlurper(environment).parse(configFile.toURI().toURL())
	ext.config = config
}

loadConfiguration()

ext.buildNumber = System.getenv('TRAVIS_BUILD_NUMBER') ?: '0'
ext.sdkmanCliBuildVersion = "${config.sdkmanCliVersion}+${buildNumber}".toString()

repositories.jcenter()

dependencies {
	testImplementation('com.github.tomakehurst:wiremock:2.25.1') {
		exclude(module: 'junit')
	}
	testImplementation('io.cucumber:cucumber-groovy:4.7.1')
	testImplementation('io.cucumber:cucumber-junit:4.7.4')
	testImplementation('io.cucumber:gherkin:5.2.0')
	testImplementation('junit:junit:4.13')
	testImplementation('org.codehaus.groovy:groovy:2.4.19')
	testImplementation('org.codehaus.groovy:groovy-json:2.4.19')
	testImplementation('org.codehaus.groovy:groovy-templates:2.4.19')
	testImplementation('org.slf4j:slf4j-api:1.7.30')
	testImplementation('org.slf4j:slf4j-simple:1.7.30')
	testImplementation('org.spockframework:spock-core:1.3-groovy-2.4') {
		exclude(module: 'groovy-all')
	}
}

task prepareScripts(type: Copy) {
	from('src/main/bash')
	into('build/scripts')
	include('**/*')
	filter(
			ReplaceTokens,
			tokens: [
					SDKMAN_VERSION       : sdkmanCliBuildVersion,
					SDKMAN_CANDIDATES_API: config.candidatesApi
			]
	)
}

tasks.test.configure {
	dependsOn(prepareScripts)
	testLogging.exceptionFormat = FULL
}

task assembleArchive(type: Zip, dependsOn: prepareScripts) {
	archiveAppendix = 'cli'
	archiveVersion = sdkmanCliBuildVersion
	from('build/scripts')
	include('*.sh*')
}

tasks.assemble.configure {
	dependsOn(assembleArchive)
}

task cleanInstallInit(type: Delete) {
	delete(installBinDir)
}

task cleanInstallModules(type: Delete) {
	delete(installSrcDir)
}

task installInit(type: Copy, dependsOn: [cleanInstallInit, prepareScripts]) {
	from('build/scripts')
	into(installBinDir)
	include('sdkman-init.sh')
}

task installModules(type: Copy, dependsOn: [cleanInstallModules, prepareScripts]) {
	from('build/scripts')
	into(installSrcDir)
	include('sdkman-*.sh')
	include('bash-completion.sh')
	exclude('sdkman-init.sh')
}

task install(dependsOn: [installInit, installModules])

bintray {
	user = System.getenv('BINTRAY_USERNAME')
	key = System.getenv('BINTRAY_API_KEY')
	publish = true
	filesSpec {
		from('build/distributions')
		into('.')
	}
	pkg {
		repo = 'generic'
		name = 'sdkman-cli'
		userOrg = 'sdkman'
		licenses = ['Apache-2.0']
		vcsUrl = 'https://github.com/sdkman/sdkman-cli.git'
		version {
			name = sdkmanCliBuildVersion
			desc = 'Binary zip distribution of SDKMAN bash client.'
			released = new Date()
		}
	}
}
